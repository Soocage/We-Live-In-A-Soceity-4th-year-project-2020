import org.gradle.internal.os.OperatingSystem

plugins {
    id 'java'
    id 'checkstyle'
    id "com.github.spotbugs" version "3.0.0"
}
checkstyle {
    ignoreFailures = false
    maxWarnings = 0
    toolVersion('8.29')
}

spotbugs {
    toolVersion = '3.1.12'
}

group 'org.example'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

project.ext.lwjglVersion = "3.2.3"
switch (OperatingSystem.current()) {
    case OperatingSystem.LINUX:
        def osArch = System.getProperty("os.arch")
        project.ext.lwjglNatives = osArch.startsWith("arm") || osArch.startsWith("aarch64")
                ? "natives-linux-${osArch.contains("64") || osArch.startsWith("armv8") ? "arm64" : "arm32"}"
                : "natives-linux"
        break
    case OperatingSystem.WINDOWS:
        project.ext.lwjglNatives = "natives-windows"
        break
}

repositories {
    mavenCentral()
}


dependencies {
    implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")
    compileClasspath("org.lwjgl:lwjgl::$lwjglNatives")

    implementation "org.lwjgl:lwjgl"
    implementation "org.lwjgl:lwjgl-assimp"
    implementation "org.lwjgl:lwjgl-glfw"
    implementation "org.lwjgl:lwjgl-openal"
    implementation "org.lwjgl:lwjgl-opengl"
    implementation "org.lwjgl:lwjgl-stb"
    runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-assimp::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-openal::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-opengl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-stb::$lwjglNatives"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
    implementation 'org.jetbrains:annotations:15.0'
    implementation 'org.jfree:jfreechart:1.5.0'
}

test {
    useJUnitPlatform()
}
